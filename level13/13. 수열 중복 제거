1/1 수열 중복 제거
시간 제한 : 2초메모리 제한 : 256MB

문제 설명
수열 vector<int> sequence가 주어집니다.
만약 중복된 숫자가 있을 경우 중복되는 숫자를 지우려고 합니다.

중복된 숫자들을 지울때 중복된 숫자 중 인덱스가 가장 높은 숫자만 남기고 나머지를 지웁니다.
위의 규칙대로 중복이 제거된 수열을 리턴하세요.

참고 / 제약 사항
sequence의 요소의 개수는 1개 이상 50개 이하 입니다.
sequence의 각 요소는 1이상 1,000이하의 정수 입니다.

테스트 케이스
vector<int> sequence = [1,5,5,1,6,1] 리턴(정답): [5,6,1]
가장 우측의 숫자만을 남기고, 나머지 숫자를 지우면 [5, 6, 1]이 됩니다.

vector<int> sequence = [2,4,2,4,4] 리턴(정답): [2,4]
vector<int> sequence = [6,6,6,6,6,6] 리턴(정답): [6]
vector<int> sequence = [1,2,3,4,2,2,3] 리턴(정답): [1,4,2,3]
vector<int> sequence = [100,100,100,99,99,99,100,100,100] 리턴(정답): [99,100]



코드
#include <vector>
#include <stack>
using namespace std;

//핵심 소스코드의 설명을 주석으로 작성하면 평가에 큰 도움이 됩니다.
class Solution{
public:
    vector<int> solution(vector<int> sequence){
        bool chk[1001];
        vector<int> ans;
        stack<int> s;
        for(int i=1; i<1001; i++) chk[i] = false;
        for(int i=sequence.size()-1; i>=0; i--){
            if(!chk[sequence[i]]){
                chk[sequence[i]] = true;
                s.push(sequence[i]);
            }
        }

        while(!s.empty()){
            ans.push_back(s.top());
            s.pop();
        }

        return ans;
    }
};
