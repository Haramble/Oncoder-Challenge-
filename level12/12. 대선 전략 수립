1/1 대선 전략 수립
시간 제한 : 2초메모리 제한 : 256MB

문제 설명
나라의 대통령 후보가 둘 있습니다.
이 후보들 중 1번 후보는 자신이 현재 가장 지고 있는 선거구에 가서 마지막 선거 유세를 하려 합니다.

지지율 조사 결과를 나타내는 vector<string> stats이 주어 집니다.
vector<string> stats의 각 요소는 선거구를 나타내며, 각 요소는 문자열로 주어집니다.

문자열은 '1'과 '2'로 구성되어 있는데, '1'은 후보1을 지지하는것을 뜻합니다. '2'는 후보2를 지지하는것을 뜻합니다.

후보1의 지지율이 가장 낮은 선거구의 인덱스를 리턴하세요.
만약, 지지율이 가장 낮은곳이 여러곳이라면, 그 중 더 낮은 인덱스를 리턴하세요.


참고 / 제약 사항
stats의 각 요소의 개수는 1개 이상, 50개 이하 입니다.
stats의 각 요소인 문자열의 길이는 1 이상, 50 이하 입니다. 또한, '1'과 '2' 만으로 구성되어 있습니다.

테스트 케이스
vector<string> stats = ["1222","1122","1222"] 리턴(정답): 0
첫번째 선거구는 25%, 두번째는 50%, 세번째는 25% 이므로, 첫번째 선거구를 선택합니다.

vector<string> stats = ["1222111122","2222222111","11111222221222222222"] 리턴(정답): 1
0번째 50%, 1번째 30%, 2번째 30% 이므로 1번째 선거구를 선택합니다.

vector<string> stats = ["111","112","121","122","211","212","221","222"] 리턴(정답): 7
vector<string> stats = ["1122","1221","1212","2112","2121","2211"] 리턴(정답): 0
vector<string> stats = ["11112222111121","1211221212121","112111222","11122222222111","112121222","1212122211112"] 리턴(정답): 3



코드
#include <string>
#include <vector>
using namespace std;

//핵심 소스코드의 설명을 주석으로 작성하면 평가에 큰 도움이 됩니다.
class Solution{
public:
    int solution(vector<string> stats){
        int ans=0;
        double k=1;
        for(int i=0; i<stats.size(); i++){
            double one=0, p;
            int tmp = stats[i].size();
            for(int j=0; j<tmp; j++)
                if(stats[i][j]=='1') one = one+1;

            p = one/tmp;
            if(p < k){
                k = p;
                ans=i;
            }
        }

        return ans;
    }
};
